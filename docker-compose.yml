version: '3'

services:
  postgres:
    container_name: cstag_db
    image: postgres:14.2
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: randompassword
      POSTGRES_DB: cstag
    ports:
      - 5432:5432
    networks:
      - main

  rabbit:
    container_name: cstag_rabbit
    image: rabbitmq:3.9.14-management-alpine
    hostname: rabbit-master
    volumes:
      - rabbit-data:/var/lib/rabbitmq
    environment:
      POSTGRES_PASSWORD: randompassword
      POSTGRES_DB: cstag
    ports:
      - 5672:5672
      - 15672:15672
    networks:
      - main

  elasticsearch:
    container_name: cstag_elasticsearch
    image: docker.elastic.co/elasticsearch/elasticsearch:8.1.2
    ports:
      - 9200:9200
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
    volumes:
      - search-data:/usr/share/elasticsearch/data
    mem_limit: 3072M
    networks:
      - main

  kibana:
    container_name: cstag_kibana
    image: docker.elastic.co/kibana/kibana:8.1.2
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    ports:
      - 5601:5601
    depends_on:
      - elasticsearch
    networks:
      - main

  nginx:
    container_name: cstag_static
    image: nginx:1.20-alpine
    volumes:
      - ./infra/dev/nginx/default.conf:/etc/nginx/conf.d/default.conf
    ports:
      - 80:8080
    networks:
      - main
    depends_on:
      - api
      - frontend

  event_consumer:
    container_name: cstag_event_consumer
    command: npm run dev
    build:
      context: .
      dockerfile: ./services/event-consumer/Dockerfile.dev
    volumes:
      - ./services/event-consumer/src:/app/services/event-consumer/src
    env_file:
      - ./services/event-consumer/.env
    networks:
      - main
    depends_on:
      - postgres
      - rabbit

  api:
    container_name: cstag_api
    command: npm run dev
    build:
      context: .
      dockerfile: ./services/api/Dockerfile.dev
    volumes:
      - ./services/api/src:/app/services/api/src
    env_file:
      - ./services/api/.env
    networks:
      - main
    depends_on:
      - postgres
      - elasticsearch
      - rabbit

  frontend:
    container_name: cstag_front
    build:
      context: ./services/frontend
      dockerfile: Dockerfile.dev
    volumes:
     - ./services/frontend/src:/app/src
     - ./services/frontend/public:/app/public
    networks:
      - main

volumes:
  postgres-data:
  rabbit-data:
  search-data:

networks:
  main:
